{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Ball.svelte",
    "../../Board.svelte",
    "../../Field.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { fade } from 'svelte/transition'\n\n  export let color = 0\n  export let selected = false\n\n  $: style =\n    color !== 0\n      ? `background: radial-gradient(circle at 0.5em 0.5em, var(--ball-color-${color}), #000);`\n      : ''\n</script>\n\n<style>\n  .ball {\n    position: absolute;\n    top: 15%;\n    left: 15%;\n    border-radius: 50%;\n    height: 70%;\n    width: 70%;\n    box-shadow: 0.2em 0.2em 0.4em var(--dark-color),\n      -0.2em -0.2em 0.4em var(--light-color);\n  }\n\n  .ball.bounce {\n    animation-name: ball-bounce;\n    animation-iteration-count: infinite;\n    animation-duration: 1s;\n    animation-timing-function: cubic-bezier(0.5, 0.5, 0.5, 0.5);\n  }\n\n  @keyframes ball-bounce {\n    0% {\n      transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);\n    }\n    25% {\n      transform: translate3d(0, 4px, 0) scale3d(1.1, 0.9, 1);\n    }\n    50% {\n      transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);\n    }\n    75% {\n      transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);\n    }\n    100% {\n      transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);\n    }\n  }\n</style>\n\n{#if color}\n  <div\n    transition:fade={{ duration: 250 }}\n    {style}\n    class=\"ball\"\n    class:bounce={selected} />\n{/if}\n",
    "<script>\n  import Field from './Field.svelte'\n\n  import {\n    score,\n    table,\n    next,\n    selected,\n    emptyBallsCount,\n  } from './../store'\n  import {\n    getRandomEmptyField,\n    getPath,\n    checkLines,\n    debounce,\n  } from './../helpers'\n\n  let loose = false\n  $: loose = $emptyBallsCount - $next.length <= 0\n\n  function cellClick(rowIndex, cellIndex) {\n    return function () {\n      if (\n        $selected.rowIndex === rowIndex &&\n        $selected.cellIndex === cellIndex\n      ) {\n        selected.reset()\n        return\n      }\n\n      selected.set({\n        rowIndex,\n        cellIndex,\n      })\n    }\n  }\n\n  function emptyCellClick(rowIndex, cellIndex) {\n    return async function () {\n      if (\n        loose ||\n        $selected.rowIndex == null ||\n        $selected.cellIndex == null\n      ) {\n        return\n      }\n\n      const path = getPath(\n        $table,\n        $selected.rowIndex,\n        $selected.cellIndex,\n        rowIndex,\n        cellIndex,\n      )\n\n      selected.reset()\n\n      moveBall(path)\n        .then(() => check(rowIndex, cellIndex))\n        .catch(() => addNext())\n    }\n  }\n\n  async function moveBall(path) {\n    return new Promise((resolve) => {\n      for (let index = 1; index < path.length; index++) {\n        setTimeout(() => {\n          table.moveBall(path[index - 1], path[index])\n\n          if (index === path.length - 1) {\n            resolve()\n          }\n        }, 100 * index)\n      }\n    })\n  }\n\n  async function check(rowIndex, cellIndex) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const line = checkLines($table, rowIndex, cellIndex)\n\n        if (line.length !== 0) {\n          score.add(line.length)\n\n          table.eraseLine(line)\n          resolve()\n        }\n\n        reject()\n      }, 500)\n    })\n  }\n\n  function addNext() {\n    $next.forEach(async (element) => {\n      let newField = getRandomEmptyField($table)\n      table.setBall(newField.rowIndex, newField.cellIndex, element)\n      await check(\n        newField.rowIndex,\n        newField.cellIndex,\n      ).catch(() => {})\n    })\n\n    next.random()\n  }\n\n  function init() {\n    score.reset()\n    selected.reset()\n    table.reset()\n    next.reset()\n\n    loose = false\n\n    addNext()\n  }\n\n  init()\n</script>\n\n<style>\n  .top,\n  .board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .top {\n    flex-direction: row;\n  }\n  p,\n  button,\n  .next {\n    display: inline-flex;\n    margin: 1em;\n  }\n\n  .board .row {\n    display: inline-flex;\n  }\n</style>\n\n<div class=\"board\">\n  <div class=\"top\">\n    <p>Score: {$score}</p>\n    {#if loose}\n      <p>Game over</p>\n    {:else}\n      <div class=\"next\">\n        {#each $next as ball}\n          <Field color={ball} />\n        {/each}\n      </div>\n    {/if}\n    <button on:click={debounce(init)}>restart</button>\n  </div>\n\n  {#each $table as row, rowIndex}\n    <div class=\"row\">\n      {#each row as cell, cellIndex}\n        <Field\n          selected={$selected.rowIndex === rowIndex && $selected.cellIndex === cellIndex}\n          on:cell-click={cellClick(rowIndex, cellIndex)}\n          on:empty-cell-click={emptyCellClick(rowIndex, cellIndex)}\n          color={cell} />\n      {/each}\n    </div>\n  {/each}\n\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import Ball from './Ball.svelte'\n\n  export let color = 0\n\n  const dispatch = createEventDispatcher()\n\n  function clickBall() {\n    dispatch(color === 0 ? 'empty-cell-click' : 'cell-click')\n  }\n</script>\n\n<style>\n  .field {\n    position: relative;\n    margin: 0.2em;\n    height: var(--field-width);\n    width: var(--field-width);\n    border-radius: 10%;\n    background: var(--base-color);\n    box-shadow: 0.2em 0.2em 0.4em var(--dark-color),\n      -0.2em -0.2em 0.4em var(--light-color);\n  }\n</style>\n\n<div class=\"field\" on:click={clickBall}>\n  <Ball {...$$props} />\n</div>\n"
  ],
  "names": [],
  "mappings": "AAaE,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC;MAC9C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AAC1C,CAAC,AAED,KAAK,OAAO,cAAC,CAAC,AACZ,cAAc,CAAE,yBAAW,CAC3B,yBAAyB,CAAE,QAAQ,CACnC,kBAAkB,CAAE,EAAE,CACtB,yBAAyB,CAAE,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC7D,CAAC,AAED,WAAW,yBAAY,CAAC,AACtB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAC1D,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AACxD,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAC1D,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AACvD,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AACvD,CAAC,AACH,CAAC;AC2ED,kCAAI,CACJ,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,+BAAC,CACD,oCAAM,CACN,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,GAAG,AACb,CAAC,AAED,qBAAM,CAAC,IAAI,eAAC,CAAC,AACX,OAAO,CAAE,WAAW,AACtB,CAAC;AC/HD,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,IAAI,aAAa,CAAC,CAC1B,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,UAAU,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC;MAC9C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AAC1C,CAAC"
}