{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Board.svelte",
    "../../Field.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Field from './Field.svelte'\n  import {\n    score,\n    table,\n    next }from './../store'\n  import { \n    getRandomEmptyField, \n    getPath, \n    checkLines,\n    getPoints,\n    gameOver } from './../helpers'\n  \n  let selected\n  let loose\n\n  function dropSelected() {\n    selected = {\n      rowIndex: null,\n      cellIndex: null\n    }\n  }\n\n  function  cellClick(rowIndex, cellIndex) {\n    if (selected.rowIndex === rowIndex && \n        selected.cellIndex === cellIndex) {\n      dropSelected()\n      return\n      \n    }\n\n    selected = {\n      rowIndex,\n      cellIndex\n    }\n  }\n\n  async function emptyCellClick(rowIndex, cellIndex) {\n    const path = getPath(\n      $table, \n      selected.rowIndex, \n      selected.cellIndex, \n      rowIndex, \n      cellIndex\n    )\n    \n    let moved = false\n\n    if (path.length > 0) {    \n      await moveBall(path)\n      moved = true\n    }\n\n    const isErase = await check(rowIndex, cellIndex)\n    \n    if (gameOver($table)) {\n      loose = true \n\n      return\n    }\n\n    if (moved && !isErase) {\n      addNext()\n    }\n    dropSelected()\n  }\n  async function moveBall(path) {\n    return new Promise(resolve => {\n      for (let index = 1; index < path.length; index++) {\n        setTimeout(() => {\n          table.moveBall(\n            path[index-1], \n            path[index]\n          )\n\n          if (index === path.length - 1) {\n            resolve()\n          }\n        }, 100 * index)\n      }        \n    })\n  }\n\n  async function check(rowIndex, cellIndex) {\n    return new Promise(resolve => {\n      setTimeout( () => {\n        const line = checkLines($table, rowIndex, cellIndex)\n\n        if (line.length !== 0) {\n          score.add(getPoints(line.length))\n\n          table.eraseLine(line)\n          resolve(true)\n        }\n\n        resolve(false)\n      }, 500)\n    })\n  }  \n\n  function addNext() {\n    $next.forEach(async (element) => {\n      let newField = getRandomEmptyField($table)\n      table.setBall(newField.rowIndex, newField.cellIndex , element)\n      await check(newField.rowIndex, newField.cellIndex)\n    })\n\n    next.random()\n  }\n\n  function init() {\n    dropSelected()\n    table.reset()\n    next.reset()\n    score.reset()\n    loose = false\n\n    addNext()\n  }\n\n  init()\n</script>\n\n<div class=\"board\">\n\n  <div class=\"top\">\n    <h2>Score: { $score }</h2>\n\n    {#each $next as ball}\n      <Field color={ball}/>\n    {/each}\n\n    <button\n      on:click={() => init()}\n    >restart</button>\n  </div>\n\n  {#each $table as row, rowIndex}\n    <div class=\"row\">\n      {#each row as cell, cellIndex}\n        <Field \n          selected={selected.rowIndex === rowIndex && selected.cellIndex === cellIndex}\n          on:cell-click={()=> cellClick(rowIndex, cellIndex)}\n          on:empty-cell-click={()=> emptyCellClick(rowIndex, cellIndex)}\n          color={cell}\n        />\n      {/each}\n    </div>\n  {/each}\n\n  <div class=\"bottom\">\n    {#if loose}\n      <h2> Game over</h2> \n    {/if}\n  </div>\n\n</div>\n\n<style>\n  .top,\n  .bottom,\n  .board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .top {\n    flex-direction: row;\n  }\n  .top h2,\n  .top button {\n    display: inline-flex;\n    margin: 1em;\n  }\n \n .board .row {\n    display: inline-flex; \n  }\n</style>",
    "<script>\n  export let color\n  export let selected\n\n  import { createEventDispatcher } from 'svelte'\n\timport { fade } from 'svelte/transition'\n\n\n\tconst dispatch = createEventDispatcher()\n\n  $: style = color !== undefined  \n              ? `background: radial-gradient(circle at 0.5em 0.5em, var(--ball-color-${color}), #000);`\n              : ''\n\n  $: classes = color !== undefined \n              ? `ball filled${selected ? ' bounce' : ''}` \n              : 'ball'\n\n  function clickBall () {\n    if (!color) {\n      dispatch('empty-cell-click')\n      \n      return\n    }\n\n    dispatch('cell-click')\n  }\n</script>\n\n<div \n  class=\"field\"\n  on:click={clickBall}\n> \n  {#if color}\n    <div \n      in:fade=\"{{duration: 250 }}\"\n      out:fade\n      {style}\n      class={classes}\n    ></div>\n  {/if}\n</div>\n\n<style>\n  .field {\n    position: relative;\n    margin: 0.2em;\n    height: 2em;\n    width: 2em;\n    border-radius: 10%;\n    background: var(--base-color);\n    box-shadow:  0.2em 0.2em 0.4em var(--dark-color), \n                -0.2em -0.2em 0.4em var(--light-color);\n  } \n\n  .ball{\n    position: absolute;\n    top: 15%;\n    left: 15%;\n    border-radius: 50%;\n    height: 70%;\n    width: 70%;\n  }\n\n  .ball.filled{    \n    box-shadow:  0.2em 0.2em 0.4em var(--dark-color), \n                -0.2em -0.2em 0.4em var(--light-color);\n  }\n\n  .ball.bounce {\n    animation-name: ball-bounce;\n    animation-iteration-count: infinite;\n    animation-duration: 1s;\n    animation-timing-function: cubic-bezier(0.5, 0.5, 0.5, 0.5);\n  }\n  \n  @keyframes ball-bounce {    \n    0%   { transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);}\n    25%  { transform: translate3d(0, 4px, 0) scale3d(1.1, 0.9, 1);}\n    50%  { transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);}\n    75%  { transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);}\n    100% { transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);}\n  }\n</style>"
  ],
  "names": [],
  "mappings": "AA+JE,gCAAI,CACJ,mCAAO,CACP,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,IAAI,4BAAC,CAAC,AACJ,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,kBAAI,CAAC,gBAAE,CACP,kBAAI,CAAC,MAAM,cAAC,CAAC,AACX,OAAO,CAAE,WAAW,CACpB,MAAM,CAAE,GAAG,AACb,CAAC,AAEF,oBAAM,CAAC,IAAI,cAAC,CAAC,AACV,OAAO,CAAE,WAAW,AACtB,CAAC;ACtID,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,UAAU,CAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC;gBACrC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AACpD,CAAC,AAED,mBAAK,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,KAAK,qBAAO,CAAC,AACX,UAAU,CAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC;gBACrC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AACpD,CAAC,AAED,KAAK,OAAO,cAAC,CAAC,AACZ,cAAc,CAAE,yBAAW,CAC3B,yBAAyB,CAAE,QAAQ,CACnC,kBAAkB,CAAE,EAAE,CACtB,yBAAyB,CAAE,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC7D,CAAC,AAED,WAAW,yBAAY,CAAC,AACtB,EAAE,AAAG,CAAC,AAAC,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,AACjE,GAAG,AAAE,CAAC,AAAC,SAAS,CAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,AAC/D,GAAG,AAAE,CAAC,AAAC,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,AACjE,GAAG,AAAE,CAAC,AAAC,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,AAC9D,IAAI,AAAC,CAAC,AAAC,SAAS,CAAE,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,AAChE,CAAC"
}