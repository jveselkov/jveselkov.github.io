{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/components/Ball.svelte","../../src/components/Field.svelte","../../node_modules/svelte/store/index.mjs","../../src/store/score.js","../../src/settings/index.js","../../src/store/table.js","../../src/helpers/astar/binaryHeap.js","../../src/helpers/astar/gridNode.js","../../src/helpers/astar/index.js","../../src/helpers/index.js","../../src/store/next.js","../../src/store/selected.js","../../src/components/Board.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { fade } from 'svelte/transition'\n\n  export let color = 0\n  export let selected = false\n\n  $: style = color !== undefined  \n              ? `background: radial-gradient(circle at 0.5em 0.5em, var(--ball-color-${color}), #000);`\n              : ''\n</script>\n\n{#if color}\n  <div \n    transition:fade=\"{{duration: 250 }}\"\n    {style}\n    class=\"ball\"\n    class:bounce={selected}\n  ></div>\n{/if}\n\n<style>\n  .ball{\n    position: absolute;\n    top: 15%;\n    left: 15%;\n    border-radius: 50%;\n    height: 70%;\n    width: 70%;   \n    box-shadow:  0.2em 0.2em 0.4em var(--dark-color), \n                -0.2em -0.2em 0.4em var(--light-color);\n  }\n\n  .ball.bounce {\n    animation-name: ball-bounce;\n    animation-iteration-count: infinite;\n    animation-duration: 1s;\n    animation-timing-function: cubic-bezier(0.5, 0.5, 0.5, 0.5);\n  }\n  \n  @keyframes ball-bounce {    \n    0%   { transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);}\n    25%  { transform: translate3d(0, 4px, 0) scale3d(1.1, 0.9, 1);}\n    50%  { transform: translate3d(0px, 0px, 0) scale3d(0.9, 1.1, 1);}\n    75%  { transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);}\n    100% { transform: translate3d(0px, -4px, 0) scale3d(1, 1, 1);}\n  }\n</style>","<script>\n  import { createEventDispatcher } from 'svelte'\n  import Ball from './Ball.svelte'\n  \n  export let color = 0\n  \n  const dispatch = createEventDispatcher()\n\n  function clickBall () {\n    dispatch(color === 0 ? 'empty-cell-click': 'cell-click')\n  }\n</script>\n\n<div \n  class=\"field\"\n  on:click={clickBall}\n> \n  <Ball {...$$props}/>\n</div>\n\n<style>\n  .field {\n    position: relative;\n    margin: 0.2em;\n    height: var(--field-width);\n    width: var(--field-width);\n    border-radius: 10%;\n    background: var(--base-color);\n    box-shadow:  0.2em 0.2em 0.4em var(--dark-color), \n                -0.2em -0.2em 0.4em var(--light-color);\n  } \n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store'\nimport { countBallToErase } from './../settings'\n\nfunction createScore() {   \n  const { subscribe, set, update } = writable(0)\n\n\treturn {\n    subscribe,\n    add: value => update(\n      score => score + (countBallToErase + (value - countBallToErase) * 2)\n    ),\n    reset: () => set(0),\n\t}\n}\n\nexport const score = createScore()","export const maxCells = 9\nexport const maxRows = 9\nexport const countColors = 5\nexport const initialBallsCount = 65\nexport const newBallsCount = 3\nexport const countBallToErase = 5","import { writable, derived } from 'svelte/store'\nimport { maxCells, maxRows } from './../settings'\n\nfunction createTable(maxCells, maxRows) {\n  \n  const  emptyTable = (maxRows, maxCells) =>\n    new Array(maxRows).fill(new Array(maxCells).fill(0))\n  \n  const { subscribe, set, update } = writable(emptyTable(maxRows, maxCells))\n  \n  const setTableCell = (table, { rowIndex, cellIndex, value }) => {\n    const row = [...table[rowIndex]]\n    row[cellIndex] = value  \n    table[rowIndex] = row\n\n    return table\n  }\n\treturn {\n    subscribe,\n\t\tsetBall: (rowIndex, cellIndex, value) => {\n      update(table => setTableCell(table, {\n        rowIndex, cellIndex, value\n      }))\n    },\n    moveBall: (from, to) => {\n      update(table => {\n        let value = table[from.rowIndex][from.cellIndex]\n\n        return setTableCell(setTableCell(table, {\n          ...to,\n          value\n        }),{\n          ...from,\n          value: 0\n        })\n      })\n    },\n    eraseLine: line => {\n      update(table => {\n        line.forEach(item => {\n          table = setTableCell(table, {\n            ...item,\n            value: 0\n          })\n        })\n\n        return table\n      })\n    },\n\t\treset: () => set(emptyTable(maxRows, maxCells)),\n\t}\n}\n\nexport const table = createTable(maxCells, maxRows)\n\nexport const emptyBallsCount = derived(\n  table,\n  $table => $table.flat().filter(item => item === 0).length\n)\n","export function getHeap (){ \n  return new BinaryHeap(node => node.f)\n}\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = []\n  this.scoreFunction = scoreFunction\n}\n\nBinaryHeap.prototype = {\n  push(element) {\n    this.content.push(element)\n    this.sinkDown(this.content.length - 1)\n  },\n  \n  pop() {\n    let result = this.content[0]\n    let end = this.content.pop()\n    \n    if (this.content.length > 0) {\n      this.content[0] = end\n      this.bubbleUp(0)\n    }\n\n    return result\n  },\n  \n  remove(node) {\n    let i = this.content.indexOf(node)\n    let end = this.content.pop()\n\n    if (i === this.content.length - 1) {\n      this.content[i] = end\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i)\n      } else {\n        this.bubbleUp(i)\n      }\n    }\n  },\n  \n  size() {\n    return this.content.length\n  },\n  \n  rescoreElement(node) {\n    this.sinkDown(this.content.indexOf(node))\n  },\n  \n  sinkDown(n) {\n    let element = this.content[n]\n\n    while (n > 0) {\n      let parentN = ((n + 1) >> 1) - 1\n      let parent = this.content[parentN]\n\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element\n        this.content[n] = parent\n        \n        n = parentN\n      }\n      else {\n        break\n      }\n    }\n  },\n\n  bubbleUp(n) {\n    let length = this.content.length\n    let element = this.content[n]\n    let elemScore = this.scoreFunction(element)\n\n    while (true) {\n      let child2N = (n + 1) << 1\n      let child1N = child2N - 1\n      let swap = null\n      let child1Score\n\n      if (child1N < length) {\n        let child1 = this.content[child1N]\n        child1Score = this.scoreFunction(child1)\n\n        if (child1Score < elemScore) {\n            swap = child1N\n        }\n      }\n\n      if (child2N < length) {\n        let child2 = this.content[child2N]\n        let child2Score = this.scoreFunction(child2)\n        \n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n            swap = child2N\n        }\n      }\n\n      if (swap !== null) {\n        this.content[n] = this.content[swap]\n        this.content[swap] = element\n        n = swap\n      } else {\n        break\n      }\n    }\n  }\n}","export function GridNode(x, y, weight) {\n  this.x = x\n  this.y = y\n  this.weight = weight\n}\n\nGridNode.prototype.toString = function() {\n  return `[${this.x} ${this.y}]`\n}\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n  if (fromNeighbor && fromNeighbor.x !== this.x && fromNeighbor.y !== this.y) {\n    return this.weight * 1.41421\n  }\n  \n  return this.weight\n}\n\nGridNode.prototype.isWall = function() {\n  return this.weight === 0\n}","import { getHeap } from './binaryHeap'\nimport { GridNode} from './gridNode'\n\nfunction Graph(gridIn, options) {\n  options = options || {}\n  this.nodes = []\n  this.diagonal = !!options.diagonal\n  this.grid = []\n\n  for (let x = 0; x < gridIn.length; x++) {\n    this.grid[x] = []\n\n    for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n      let node = new GridNode(x, y, row[y])\n      \n      this.grid[x][y] = node\n      this.nodes.push(node)\n    }\n  }\n\n  this.init()\n}\n\nGraph.prototype.init = function() {\n  this.dirtyNodes = []\n\n  for (let i = 0; i < this.nodes.length; i++) {\n    astar.cleanNode(this.nodes[i])\n  }\n}\n\nGraph.prototype.cleanDirty = function() {\n  for (let i = 0; i < this.dirtyNodes.length; i++) {\n    astar.cleanNode(this.dirtyNodes[i])\n  }\n\n  this.dirtyNodes = []\n}\n\nGraph.prototype.markDirty = function(node) {\n  this.dirtyNodes.push(node)\n}\n\nGraph.prototype.neighbors = function(node) {\n  const ret = []\n  const x = node.x\n  const y = node.y\n  const grid = this.grid\n\n  // West\n  if (grid[x - 1] && grid[x - 1][y]) {\n    ret.push(grid[x - 1][y])\n  }\n\n  // East\n  if (grid[x + 1] && grid[x + 1][y]) {\n    ret.push(grid[x + 1][y])\n  }\n\n  // South\n  if (grid[x] && grid[x][y - 1]) {\n    ret.push(grid[x][y - 1])\n  }\n\n  // North\n  if (grid[x] && grid[x][y + 1]) {\n    ret.push(grid[x][y + 1])\n  }\n\n  if (!this.diagonal) {\n    return ret\n  }\n  \n  // Southwest\n  if (grid[x - 1] && grid[x - 1][y - 1]) {\n      ret.push(grid[x - 1][y - 1])\n  }\n\n  // Southeast\n  if (grid[x + 1] && grid[x + 1][y - 1]) {\n      ret.push(grid[x + 1][y - 1])\n  }\n\n  // Northwest\n  if (grid[x - 1] && grid[x - 1][y + 1]) {\n      ret.push(grid[x - 1][y + 1])\n  }\n\n  // Northeast\n  if (grid[x + 1] && grid[x + 1][y + 1]) {\n      ret.push(grid[x + 1][y + 1])\n  }\n\n  return ret\n}\n\nGraph.prototype.toString = function() {\n  const graphString = []\n  const nodes = this.grid\n\n  for (let x = 0; x < nodes.length; x++) {\n    const rowDebug = []\n    const row = nodes[x]\n    \n    for (let y = 0; y < row.length; y++) {\n      rowDebug.push(row[y].weight)\n    }\n\n    graphString.push(rowDebug.join(\" \"))\n  }\n\n  return graphString.join(\"\\n\")\n}\nfunction pathTo(node) {\n  let curr = node\n  const path = []\n\n  while (curr.parent) {\n    path.unshift(curr)\n    curr = curr.parent\n  }\n  \n  return path\n}\n\nconst astar = {\n  search(graph, start, end, options) {\n    graph.cleanDirty()\n    options = options || {}\n    \n    let heuristic = options.heuristic || astar.heuristics.manhattan\n    let closest = options.closest || false\n\n    let openHeap = getHeap()\n    let closestNode = start\n\n    start.h = heuristic(start, end)\n    graph.markDirty(start)\n\n    openHeap.push(start)\n\n    while (openHeap.size() > 0) {\n      let currentNode = openHeap.pop()\n\n      if (currentNode === end) {\n        return pathTo(currentNode)\n      }\n\n      currentNode.closed = true\n\n      let neighbors = graph.neighbors(currentNode)\n\n      for (let i = 0, il = neighbors.length; i < il; ++i) {\n        let neighbor = neighbors[i]\n\n        if (neighbor.closed || neighbor.isWall()) {\n          continue\n        }\n\n        let gScore = currentNode.g + neighbor.getCost(currentNode)\n        let beenVisited = neighbor.visited\n\n        if (!beenVisited || gScore < neighbor.g) {\n          neighbor.visited = true\n          neighbor.parent = currentNode\n          neighbor.h = neighbor.h || heuristic(neighbor, end)\n          neighbor.g = gScore\n          neighbor.f = neighbor.g + neighbor.h\n          graph.markDirty(neighbor)\n\n          if (closest) {\n            if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n              closestNode = neighbor\n            }\n          }\n\n          if (!beenVisited) {\n            openHeap.push(neighbor)\n          } else {\n            openHeap.rescoreElement(neighbor)\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode)\n    }\n\n    return []\n  },\n\n  heuristics: {\n    manhattan(pos0, pos1) {\n      let d1 = Math.abs(pos1.x - pos0.x)\n      let d2 = Math.abs(pos1.y - pos0.y)\n\n      return d1 + d2\n    },\n\n    diagonal(pos0, pos1) {\n      let D = 1\n      let D2 = Math.sqrt(2)\n      let d1 = Math.abs(pos1.x - pos0.x)\n      let d2 = Math.abs(pos1.y - pos0.y)\n\n      return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2))\n    }\n  },\n\n  cleanNode(node) {\n    node.f = 0\n    node.g = 0\n    node.h = 0\n    node.visited = false\n    node.closed = false\n    node.parent = null\n  }\n}\n\nexport  {\n  astar,\n  Graph\n}"," import {\n  newBallsCount,\n  countBallToErase,\n } from './../settings'\n\nfunction getRandomInt(min, max) {\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n}\n\nfunction getRandomEmptyField(table){\n  let rowIndex, cellIndex\n\n  do {\n    rowIndex = getRandomInt(0, table.length - 1)\n    cellIndex = getRandomInt(0, table[0].length - 1)\n  } while (table[rowIndex][cellIndex] !== 0)\n  \n  return  {\n    rowIndex, \n    cellIndex\n  }\n}\n\nfunction checkLines(table, rowIndex, cellIndex) {\n  if (table[rowIndex][cellIndex] == undefined) {\n    return []\n  }\n  const maxCells = table[0].length\n  const maxRows = table.length\n\n  const lines = []\n      \n  const horizontalLine = []\n\n  for (let index = cellIndex; index >= 0; index--) {\n    if (table[rowIndex][index] === table[rowIndex][cellIndex]) {  \n      horizontalLine.push({\n        rowIndex,\n        cellIndex: index\n      })\n    } else {\n      break\n    }\n  }\n\n  for (let index = cellIndex + 1; index < maxCells; index++) {\n    if (table[rowIndex][index] === table[rowIndex][cellIndex]) {  \n      horizontalLine.push({\n        rowIndex,\n        cellIndex: index\n      })\n    } else {\n      break\n    }\n  }\n  \n  const verticalLine = []\n  \n  for (let index = rowIndex; index >= 0; index--) {\n    if (table[index][cellIndex] === table[rowIndex][cellIndex]) {  \n      verticalLine.push({\n        rowIndex: index,\n        cellIndex\n      })\n    } else {\n      break\n    }\n  }\n\n  for (let index = rowIndex + 1; index < maxRows; index++) {\n    if (table[index][cellIndex] === table[rowIndex][cellIndex]) {  \n      verticalLine.push({\n        rowIndex: index,\n        cellIndex\n      })\n    } else {\n      break\n    }\n  }\n\n  if (horizontalLine.length >= countBallToErase) {\n    lines.push(horizontalLine)  \n  }\n  \n  if (verticalLine.length >= countBallToErase) {\n    lines.push(verticalLine)  \n  }\n\n  return lines.flat()\n}\n\nimport { Graph, astar } from './astar'\n\nfunction getPath(table, rowIndexFrom, cellIndexFrom, rowIndexTo, cellIndexTo) {\n  const graph = new Graph(table.map(row => row.map(cell => !!cell ? 0 : 1)))\n\n  const result = astar.search(\n    graph, \n    graph.grid[rowIndexFrom][cellIndexFrom], \n    graph.grid[rowIndexTo][cellIndexTo]\n  ).map( item => {\n    return {\n      rowIndex: item.x,\n      cellIndex: item.y\n    }\n  })\n\n  return result.length > 0 \n    ? [{ \n      rowIndex: rowIndexFrom,\n      cellIndex: cellIndexFrom\n    }, \n    ...result\n  ]\n    : []\n}\n\nexport {\n  checkLines,\n  getPath,\n  getRandomEmptyField,\n  getRandomInt\n}","import { writable } from 'svelte/store'\nimport { getRandomInt } from '../helpers'\nimport { countColors, newBallsCount, initialBallsCount } from './../settings'\n\nconst randomArr = (countColors, newBallsCount) => \n  (new Array(newBallsCount).fill(0)).map(() => getRandomInt(1, countColors))\n  \n\nfunction createNextBalls(countColors, newBallsCount, initialBallsCount) {   \n\n  const { subscribe, set } = writable(randomArr(countColors, initialBallsCount))\n  \n\treturn {\n    subscribe,\n    random:() => set(randomArr(countColors, newBallsCount)), \n    reset: () => set(randomArr(countColors, initialBallsCount))\n\t}\n}\n\nexport const next = createNextBalls(countColors, newBallsCount, initialBallsCount)","import { writable } from 'svelte/store'\n\nfunction createSelected(c) {   \n  const initial = {\n    rowIndex: null,\n    cellIndex: null\n  }\n  const { subscribe, set, update } = writable(initial)\n  \n\treturn {\n    subscribe,\n    set: value => update( () => value), \n    reset: () => set(initial)\n\t}\n}\n\nexport const selected = createSelected()","<script>\n  import Field from './Field.svelte'\n  import {\n    score,\n    table,\n    next,\n    selected,\n    emptyBallsCount }from './../store'\n  import { \n    getRandomEmptyField, \n    getPath, \n    checkLines } from './../helpers'\n  import { fade } from 'svelte/transition'\n  \n  let loose = false \n  $: loose = $emptyBallsCount - $next.length <= 0\n\n  function  cellClick(rowIndex, cellIndex) {\n    if ($selected.rowIndex === rowIndex && \n        $selected.cellIndex === cellIndex) {\n      selected.reset()\n      return\n      \n    }\n\n    selected.set({\n      rowIndex,\n      cellIndex\n    })\n  }\n\n  async function emptyCellClick(rowIndex, cellIndex) {\n    if (loose || \n        ($selected.rowIndex == null || \n        $selected.cellIndex == null )) {\n\n        return \n    }\n\n    const path = getPath(\n      $table, \n      $selected.rowIndex, \n      $selected.cellIndex, \n      rowIndex, \n      cellIndex\n    )\n\n    selected.reset()\n    \n    let moved = false\n\n    if (path.length > 0) {    \n      await moveBall(path)\n      moved = true\n    }\n\n    const isErase = await check(rowIndex, cellIndex)\n\n    if (moved && !isErase) {\n      addNext()\n    }\n  }\n  async function moveBall(path) {\n    return new Promise(resolve => {\n      for (let index = 1; index < path.length; index++) {\n        setTimeout(() => {\n          table.moveBall(\n            path[index-1], \n            path[index]\n          )\n\n          if (index === path.length - 1) {\n            resolve()\n          }\n        }, 100 * index)\n      }        \n    })\n  }\n\n  async function check(rowIndex, cellIndex) {\n    return new Promise(resolve => {\n      setTimeout( () => {\n        const line = checkLines($table, rowIndex, cellIndex)\n\n        if (line.length !== 0) {\n          score.add(line.length)\n\n          table.eraseLine(line)\n          resolve(true)\n        }\n\n        resolve(false)\n      }, 500)\n    })\n  }  \n\n  function addNext() {\n    $next.forEach(async (element) => {\n      let newField = getRandomEmptyField($table)\n      table.setBall(newField.rowIndex, newField.cellIndex , element)\n      await check(newField.rowIndex, newField.cellIndex)\n    })\n\n    next.random()\n  }\n\n  function init() {\n    selected.reset()\n    table.reset()\n    next.reset()\n    score.reset()\n    loose = false\n\n    addNext()\n  }\n\n  init()\n</script>\n\n<div class=\"board\">\n  <div class=\"top\">\n  <p>Score: { $score }</p>\n    {#if loose}\n      <p> Game over</p> \n    {:else}\n      <div class=\"next\"> \n        {#each $next as ball}\n          <Field color={ball}/>\n        {/each}\n      </div>\n    {/if}\n    <button\n      on:click={() => init()}\n    >restart</button>\n  </div>\n\n  {#each $table as row, rowIndex}\n    <div class=\"row\">\n      {#each row as cell, cellIndex}\n        <Field \n          selected={$selected.rowIndex === rowIndex && $selected.cellIndex === cellIndex}\n          on:cell-click={()=> cellClick(rowIndex, cellIndex)}\n          on:empty-cell-click={()=> emptyCellClick(rowIndex, cellIndex)}\n          color={cell}\n        />\n      {/each}\n    </div>\n  {/each}\n\n</div>\n\n<style>\n  .top,\n  .board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .top {\n    flex-direction: row;\n  }\n  p,\n  button,\n  .next {\n    display: inline-flex;\n    margin: 1em;\n  }\n \n .board .row {\n    display: inline-flex; \n  }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","exclude_internal_props","props","result","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","ownerDocument","add","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","createEventDispatcher","Error","get_current_component","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","index","splice","fade","linear","getComputedStyle","opacity","color","selected","undefined","levels","updates","to_null_out","accounted_for","$$scope","n","key","spread_props","subscriber_queue","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","score","reset","createScore","table","maxCells","maxRows","emptyTable","setTableCell","rowIndex","cellIndex","row","setBall","moveBall","to","eraseLine","line","item","createTable","emptyBallsCount","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","derived","$table","flat","BinaryHeap","scoreFunction","content","GridNode","y","weight","Graph","gridIn","diagonal","grid","pathTo","curr","path","parent","unshift","prototype","sinkDown","bubbleUp","parentN","elemScore","child1Score","child2N","child1N","swap","child1","child2","toString","getCost","fromNeighbor","isWall","dirtyNodes","astar","cleanNode","cleanDirty","markDirty","neighbors","graphString","rowDebug","graph","heuristic","heuristics","manhattan","closest","openHeap","closestNode","h","currentNode","closed","il","neighbor","gScore","g","beenVisited","visited","rescoreElement","pos0","pos1","D2","sqrt","d1","d2","min","getRandomInt","max","rand","random","round","randomArr","countColors","newBallsCount","initialBallsCount","createNextBalls","initial","createSelected","loose","cellClick","$selected","emptyCellClick","rowIndexFrom","cellIndexFrom","rowIndexTo","cellIndexTo","cell","search","getPath","moved","isErase","check","addNext","setTimeout","lines","horizontalLine","verticalLine","checkLines","$next","newField","getRandomEmptyField","$emptyBallsCount","body"],"mappings":"gCAAA,SAASA,KACT,MAAMC,EAAWC,GAAKA,EACtB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAUhF,SAASE,EAAUC,KAAUC,GACzB,GAAa,MAATD,EACA,OAAOrB,EAEX,MAAMuB,EAAQF,EAAMD,aAAaE,GACjC,OAAOC,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,EAO3D,SAASE,EAAoBC,EAAWL,EAAOM,GAC3CD,EAAUE,GAAGC,WAAWC,KAAKV,EAAUC,EAAOM,IAsClD,SAASI,EAAuBC,GAC5B,MAAMC,EAAS,GACf,IAAK,MAAM3B,KAAK0B,EACC,MAAT1B,EAAE,KACF2B,EAAO3B,GAAK0B,EAAM1B,IAC1B,OAAO2B,EA+BX,MAAMC,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMxC,EASxD,MAAM0C,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAM5B,QAAQ+B,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,OAGM,IAAfN,EAAMO,MACNV,EAAIK,GA0BZ,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOtB,EAAMuB,EAAOC,EAASC,GAElC,OADAzB,EAAK0B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMzB,EAAK2B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK5B,EAAM6B,EAAWC,GACd,MAATA,EACA9B,EAAK+B,gBAAgBF,GAChB7B,EAAKgC,aAAaH,KAAeC,GACtC9B,EAAKiC,aAAaJ,EAAWC,GA2LrC,SAASI,EAAapB,EAASC,EAAMoB,GACjCrB,EAAQsB,UAAUD,EAAS,MAAQ,UAAUpB,GAEjD,SAASsB,EAAaC,EAAMC,GACxB,MAAMC,EAAIxB,SAASyB,YAAY,eAE/B,OADAD,EAAEE,gBAAgBJ,GAAM,GAAO,EAAOC,GAC/BC,EAqCX,MAAMG,EAAc,IAAIpD,IACxB,IAiIIqD,EAjIAC,EAAS,EASb,SAASC,EAAY9C,EAAMlC,EAAGC,EAAGgF,EAAUC,EAAOC,EAAM7F,EAAI8F,EAAM,GAC9D,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,GAAKF,EAAM,CAC/B,MAAMG,EAAIxF,GAAKC,EAAID,GAAKmF,EAAKI,GAC7BD,GAAiB,IAAJC,EAAU,KAAKjG,EAAGkG,EAAG,EAAIA,QAE1C,MAAMC,EAAOH,EAAY,SAAShG,EAAGW,EAAG,EAAIA,SACtCgD,EAAO,YAfjB,SAAcyC,GACV,IAAIC,EAAO,KACP9C,EAAI6C,EAAI5C,OACZ,KAAOD,KACH8C,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAW/C,GACjD,OAAO8C,IAAS,EAUSA,CAAKF,MAASL,IACjCS,EAAM3D,EAAK4D,cACjBjB,EAAYkB,IAAIF,GAChB,MAAMG,EAAaH,EAAII,sBAAwBJ,EAAII,oBAAsBJ,EAAIK,KAAK/D,YAAYa,EAAQ,UAAUmD,OAC1GC,EAAgBP,EAAIQ,iBAAmBR,EAAIQ,eAAiB,IAC7DD,EAAcnD,KACfmD,EAAcnD,IAAQ,EACtB+C,EAAWM,WAAW,cAAcrD,KAAQwC,IAAQO,EAAWO,SAASzD,SAE5E,MAAM0D,EAAYtE,EAAKuE,MAAMD,WAAa,GAG1C,OAFAtE,EAAKuE,MAAMD,UAAY,GAAGA,EAAeA,EAAH,KAAmB,KAAKvD,KAAQgC,cAAqBC,aAC3FH,GAAU,EACH9B,EAEX,SAASyD,EAAYxE,EAAMe,GACvB,MAAM0D,GAAYzE,EAAKuE,MAAMD,WAAa,IAAII,MAAM,MAC9CC,EAAOF,EAASG,OAAO7D,EACvB8D,GAAQA,EAAKC,QAAQ/D,GAAQ,EAC7B8D,IAAsC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUN,EAAS7D,OAAS+D,EAAK/D,OACnCmE,IACA/E,EAAKuE,MAAMD,UAAYK,EAAKK,KAAK,MACjCnC,GAAUkC,EACLlC,GAKT1D,EAAI,KACI0D,IAEJF,EAAYjF,QAAQiG,IAChB,MAAMG,EAAaH,EAAII,oBACvB,IAAIpD,EAAImD,EAAWO,SAASzD,OAC5B,KAAOD,KACHmD,EAAWmB,WAAWtE,GAC1BgD,EAAIQ,eAAiB,KAEzBxB,EAAYuC,YA0EpB,SAASC,EAAsB7G,GAC3BsE,EAAoBtE,EAmBxB,SAAS8G,IACL,MAAM9G,EAlBV,WACI,IAAKsE,EACD,MAAM,IAAIyC,MAAM,oDACpB,OAAOzC,EAeW0C,GAClB,MAAO,CAAChD,EAAMC,KACV,MAAMrE,EAAYI,EAAUE,GAAGN,UAAUoE,GACzC,GAAIpE,EAAW,CAGX,MAAMqD,EAAQc,EAAaC,EAAMC,GACjCrE,EAAUqH,QAAQ7H,QAAQN,IACtBA,EAAGoI,KAAKlH,EAAWiD,OAqBnC,MAAMkE,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB7I,GACzBuI,EAAiBjH,KAAKtB,GAK1B,IAAI8I,GAAW,EACf,MAAMC,EAAiB,IAAI5G,IAC3B,SAAS6G,IACL,IAAIF,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIvF,EAAI,EAAGA,EAAI8E,EAAiB7E,OAAQD,GAAK,EAAG,CACjD,MAAMrC,EAAYmH,EAAiB9E,GACnCwE,EAAsB7G,GACtB+H,EAAO/H,EAAUE,IAGrB,IADAiH,EAAiB7E,OAAS,EACnB8E,EAAkB9E,QACrB8E,EAAkBY,KAAlBZ,GAIJ,IAAK,IAAI/E,EAAI,EAAGA,EAAIgF,EAAiB/E,OAAQD,GAAK,EAAG,CACjD,MAAMpC,EAAWoH,EAAiBhF,GAC7BwF,EAAeI,IAAIhI,KAEpB4H,EAAetC,IAAItF,GACnBA,KAGRoH,EAAiB/E,OAAS,QACrB6E,EAAiB7E,QAC1B,KAAOgF,EAAgBhF,QACnBgF,EAAgBU,KAAhBV,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAejB,SAEnB,SAASmB,EAAO7H,GACZ,GAAoB,OAAhBA,EAAGgI,SAAmB,CACtBhI,EAAG6H,SACH7I,EAAQgB,EAAGiI,eACX,MAAMC,EAAQlI,EAAGkI,MACjBlI,EAAGkI,MAAQ,EAAE,GACblI,EAAGgI,UAAYhI,EAAGgI,SAASnD,EAAE7E,EAAGmI,IAAKD,GACrClI,EAAGoI,aAAalJ,QAAQuI,IAIhC,IAAIY,EAUJ,SAASC,EAAS9G,EAAM+G,EAAWC,GAC/BhH,EAAKiH,cAAc5E,EAAa,GAAG0E,EAAY,QAAU,UAAUC,MAEvE,MAAME,EAAW,IAAI3H,IACrB,IAAI4H,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACH3H,EAAG,GACH2D,EAAG8D,GAGX,SAASG,IACAH,EAAOE,GACR7J,EAAQ2J,EAAOzH,GAEnByH,EAASA,EAAO9D,EAEpB,SAASkE,EAAcC,EAAOC,GACtBD,GAASA,EAAM7G,IACfuG,EAASvH,OAAO6H,GAChBA,EAAM7G,EAAE8G,IAGhB,SAASC,EAAeF,EAAOC,EAAOpH,EAAQ9B,GAC1C,GAAIiJ,GAASA,EAAMG,EAAG,CAClB,GAAIT,EAASX,IAAIiB,GACb,OACJN,EAASrD,IAAI2D,GACbL,EAAOzH,EAAEhB,KAAK,KACVwI,EAASvH,OAAO6H,GACZjJ,IACI8B,GACAmH,EAAM3G,EAAE,GACZtC,OAGRiJ,EAAMG,EAAEF,IAGhB,MAAMG,EAAkB,CAAE7E,SAAU,GAuHpC,SAAS8E,GAAgC7H,EAAM5C,EAAI0K,EAAQC,GACvD,IAAIC,EAAS5K,EAAG4C,EAAM8H,GAClBxE,EAAIyE,EAAQ,EAAI,EAChBE,EAAkB,KAClBC,EAAkB,KAClBC,EAAiB,KACrB,SAASC,IACDD,GACA3D,EAAYxE,EAAMmI,GAE1B,SAASE,EAAKC,EAASvF,GACnB,MAAMlC,EAAIyH,EAAQvK,EAAIuF,EAEtB,OADAP,GAAYwF,KAAKC,IAAI3H,GACd,CACH/C,EAAGwF,EACHvF,EAAGuK,EAAQvK,EACX8C,EAAAA,EACAkC,SAAAA,EACA0F,MAAOH,EAAQG,MACfC,IAAKJ,EAAQG,MAAQ1F,EACrB4F,MAAOL,EAAQK,OAGvB,SAASC,EAAG7K,GACR,MAAMiF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG8F,OAAEA,EAAShM,EAAQiM,KAAEA,EAAOlM,EAAImM,IAAEA,GAAQf,GAAUJ,EAC/EU,EAAU,CACZG,MAAOzJ,IAAQgE,EACfjF,EAAAA,GAECA,IAEDuK,EAAQK,MAAQxB,EAChBA,EAAOE,GAAK,GAEZY,EACAC,EAAkBI,GAKdS,IACAX,IACAD,EAAiBrF,EAAY9C,EAAMsD,EAAGvF,EAAGgF,EAAUC,EAAO6F,EAAQE,IAElEhL,GACA+K,EAAK,EAAG,GACZb,EAAkBI,EAAKC,EAASvF,GAChCkD,EAAoB,IAAMa,EAAS9G,EAAMjC,EAAG,UAlxBxD,SAAcQ,GACV,IAAIkB,EACe,IAAfH,EAAMO,MACNV,EAAIK,GAEK,IAAIsG,QAAQkD,IACjB1J,EAAMuE,IAAIpE,EAAO,CAAEC,EAAGnB,EAAUqB,EAAGoJ,MA6wBnCC,CAAKjK,IAUD,GATIkJ,GAAmBlJ,EAAMkJ,EAAgBO,QACzCR,EAAkBI,EAAKH,EAAiBnF,GACxCmF,EAAkB,KAClBpB,EAAS9G,EAAMiI,EAAgBlK,EAAG,SAC9BgL,IACAX,IACAD,EAAiBrF,EAAY9C,EAAMsD,EAAG2E,EAAgBlK,EAAGkK,EAAgBlF,SAAU,EAAG8F,EAAQb,EAAOe,OAGzGd,EACA,GAAIjJ,GAAOiJ,EAAgBS,IACvBI,EAAKxF,EAAI2E,EAAgBlK,EAAG,EAAIuF,GAChCwD,EAAS9G,EAAMiI,EAAgBlK,EAAG,OAC7BmK,IAEGD,EAAgBlK,EAEhBqK,MAIOH,EAAgBU,MAAMtB,GACzB7J,EAAQyK,EAAgBU,MAAMjJ,IAG1CuI,EAAkB,UAEjB,GAAIjJ,GAAOiJ,EAAgBQ,MAAO,CACnC,MAAMpF,EAAIrE,EAAMiJ,EAAgBQ,MAChCnF,EAAI2E,EAAgBnK,EAAImK,EAAgBpH,EAAIgI,EAAOxF,EAAI4E,EAAgBlF,UACvE+F,EAAKxF,EAAG,EAAIA,GAGpB,SAAU2E,IAAmBC,MAIzC,MAAO,CACHgB,IAAInL,GACIJ,EAAYqK,IA/PnBnB,IACDA,EAAUf,QAAQC,UAClBc,EAAQsC,KAAK,KACTtC,EAAU,QAGXA,GA0PYsC,KAAK,KAERnB,EAASA,IACTY,EAAG7K,KAIP6K,EAAG7K,IAGXmL,MACId,IACAH,EAAkBC,EAAkB,OAwWhD,SAASkB,GAAiB5B,GACtBA,GAASA,EAAM9H,IAKnB,SAAS2J,GAAgB/K,EAAWyB,EAAQI,GACxC,MAAMqG,SAAEA,EAAQ8C,SAAEA,EAAQ7K,WAAEA,EAAUmI,aAAEA,GAAiBtI,EAAUE,GACnEgI,GAAYA,EAAS+C,EAAExJ,EAAQI,GAE/B8F,EAAoB,KAChB,MAAMuD,EAAiBF,EAASG,IAAItM,GAAKyH,OAAOjH,GAC5Cc,EACAA,EAAWC,QAAQ8K,GAKnBhM,EAAQgM,GAEZlL,EAAUE,GAAG8K,SAAW,KAE5B1C,EAAalJ,QAAQuI,GAEzB,SAASyD,GAAkBpL,EAAWoC,GAClC,MAAMlC,EAAKF,EAAUE,GACD,OAAhBA,EAAGgI,WACHhJ,EAAQgB,EAAGC,YACXD,EAAGgI,UAAYhI,EAAGgI,SAAS3F,EAAEH,GAG7BlC,EAAGC,WAAaD,EAAGgI,SAAW,KAC9BhI,EAAGmI,IAAM,IAGjB,SAASgD,GAAWrL,EAAWqC,IACI,IAA3BrC,EAAUE,GAAGkI,MAAM,KACnBjB,EAAiB/G,KAAKJ,GA1tBrB0H,IACDA,GAAmB,EACnBH,EAAiBsD,KAAK/C,IA0tBtB9H,EAAUE,GAAGkI,MAAMkD,KAAK,IAE5BtL,EAAUE,GAAGkI,MAAO/F,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS0H,GAAK/J,EAAWmD,EAASoI,EAAUC,EAAiBC,EAAWnL,EAAO8H,EAAQ,EAAE,IACrF,MAAMsD,EAAmBpH,EACzBuC,EAAsB7G,GACtB,MAAM2L,EAAcxI,EAAQ7C,OAAS,GAC/BJ,EAAKF,EAAUE,GAAK,CACtBgI,SAAU,KACVG,IAAK,KAEL/H,MAAAA,EACAyH,OAAQzJ,EACRmN,UAAAA,EACAG,MAAO7M,IAEPiM,SAAU,GACV7K,WAAY,GACZgI,cAAe,GACfG,aAAc,GACduD,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiBxL,GAAG2L,QAAU,IAElEjM,UAAWb,IACXqJ,MAAAA,GAEJ,IAAI2D,GAAQ,EAkBZ,GAjBA7L,EAAGmI,IAAMkD,EACHA,EAASvL,EAAW2L,EAAa,CAACtJ,EAAG2J,KAAQC,KAC3C,MAAMzI,EAAQyI,EAAK3J,OAAS2J,EAAK,GAAKD,EAOtC,OANI9L,EAAGmI,KAAOoD,EAAUvL,EAAGmI,IAAIhG,GAAInC,EAAGmI,IAAIhG,GAAKmB,KACvCtD,EAAG0L,MAAMvJ,IACTnC,EAAG0L,MAAMvJ,GAAGmB,GACZuI,GACAV,GAAWrL,EAAWqC,IAEvB2J,IAET,GACN9L,EAAG6H,SACHgE,GAAQ,EACR7M,EAAQgB,EAAGiI,eAEXjI,EAAGgI,WAAWsD,GAAkBA,EAAgBtL,EAAGmI,KAC/ClF,EAAQ1B,OAAQ,CAChB,GAAI0B,EAAQ+I,QAAS,CACjB,MAAMC,EApnClB,SAAkB3J,GACd,OAAO4J,MAAMC,KAAK7J,EAAQ8J,YAmnCJC,CAASpJ,EAAQ1B,QAE/BvB,EAAGgI,UAAYhI,EAAGgI,SAASsE,EAAEL,GAC7BA,EAAM/M,QAAQ2C,QAId7B,EAAGgI,UAAYhI,EAAGgI,SAAS9G,IAE3B+B,EAAQsG,OACRR,EAAcjJ,EAAUE,GAAGgI,UAC/B6C,GAAgB/K,EAAWmD,EAAQ1B,OAAQ0B,EAAQtB,QACnDiG,IAEJjB,EAAsB6E,GAsC1B,MAAMe,GACF7B,WACIQ,GAAkBsB,KAAM,GACxBA,KAAKC,SAAWrO,EAEpBsM,IAAI5G,EAAM/D,GACN,MAAML,EAAa8M,KAAKxM,GAAGN,UAAUoE,KAAU0I,KAAKxM,GAAGN,UAAUoE,GAAQ,IAEzE,OADApE,EAAUQ,KAAKH,GACR,KACH,MAAM2M,EAAQhN,EAAU4G,QAAQvG,IACjB,IAAX2M,GACAhN,EAAUiN,OAAOD,EAAO,IAGpChC,SC77CJ,SAASkC,GAAKpL,GAAMgD,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG8F,OAAEA,EAASwC,IACtD,MAAM1D,GAAK2D,iBAAiBtL,GAAMuL,QAClC,MAAO,CACHvI,MAAAA,EACAD,SAAAA,EACA8F,OAAAA,EACAE,IAAKzF,GAAK,YAAYA,EAAIqE,oHChChBhB,mFAAAA,sCAHK5D,SAAU,gDAAVA,SAAU,+EAF5B4D,kCF8MMzF,EAAK,gDE9MXyF,2MARQ6E,EAAQ,eACRC,GAAW,yHAEnBlH,OAAkBmH,IAAVF,yEAC0EA,aACvE,qICSJ7E,iNAFAA,kCH6oCZ,SAA2BgF,EAAQC,GAC/B,MAAMvF,EAAS,GACTwF,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAIpL,EAAIgL,EAAO/K,OACf,KAAOD,KAAK,CACR,MAAMgH,EAAIgE,EAAOhL,GACXqL,EAAIJ,EAAQjL,GAClB,GAAIqL,EAAG,CACH,IAAK,MAAMC,KAAOtE,EACRsE,KAAOD,IACTH,EAAYI,GAAO,GAE3B,IAAK,MAAMA,KAAOD,EACTF,EAAcG,KACf5F,EAAO4F,GAAOD,EAAEC,GAChBH,EAAcG,GAAO,GAG7BN,EAAOhL,GAAKqL,OAGZ,IAAK,MAAMC,KAAOtE,EACdmE,EAAcG,GAAO,EAIjC,IAAK,MAAMA,KAAOJ,EACRI,KAAO5F,IACTA,EAAO4F,QAAOP,GAEtB,OAAOrF,OAEgB6F,EG5qCfvF,KH6qCuB,iBAAjBuF,GAA8C,OAAjBA,EAAwBA,EAAe,SADtF,IAA2BA,yIGzrCdV,EAAQ,WAEb1E,EAAW1B,sFAGf0B,EAAmB,IAAV0E,EAAc,mBAAoB,kGCN/C,MAAMW,GAAmB,GAgBzB,SAASC,GAAStK,EAAO2G,EAAQ7L,GAC7B,IAAIyP,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAI3O,EAAeiE,EAAO0K,KACtB1K,EAAQ0K,EACJH,GAAM,CACN,MAAMI,GAAaN,GAAiBvL,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAI2L,EAAY1L,OAAQD,GAAK,EAAG,CAC5C,MAAM+L,EAAIJ,EAAY3L,GACtB+L,EAAE,KACFP,GAAiBzN,KAAKgO,EAAG5K,GAE7B,GAAI2K,EAAW,CACX,IAAK,IAAI9L,EAAI,EAAGA,EAAIwL,GAAiBvL,OAAQD,GAAK,EAC9CwL,GAAiBxL,GAAG,GAAGwL,GAAiBxL,EAAI,IAEhDwL,GAAiBvL,OAAS,IA0B1C,MAAO,CAAE2L,IAAAA,EAAKlG,OArBd,SAAgBjJ,GACZmP,EAAInP,EAAG0E,KAoBW9D,UAlBtB,SAAmBb,EAAKwP,EAAa/P,GACjC,MAAMgQ,EAAa,CAACzP,EAAKwP,GAMzB,OALAL,EAAY5N,KAAKkO,GACU,IAAvBN,EAAY1L,SACZyL,EAAO5D,EAAM8D,IAAQ3P,GAEzBO,EAAI2E,GACG,KACH,MAAMoJ,EAAQoB,EAAYxH,QAAQ8H,IACnB,IAAX1B,GACAoB,EAAYnB,OAAOD,EAAO,GAEH,IAAvBoB,EAAY1L,SACZyL,IACAA,EAAO,SC3ChB,MAAMQ,GAZb,WACE,MAAM7O,UAAEA,EAASuO,IAAEA,EAAGlG,OAAEA,GAAW+F,GAAS,GAE7C,MAAO,CACJpO,UAAAA,EACA6F,IAAK/B,GAASuE,EACZwG,GAASA,GCJiB,EDIwC,GAA5B/K,ECJZ,KDM5BgL,MAAO,IAAMP,EAAI,IAIAQ,GEsCd,MAAMC,GAlDb,SAAqBC,EAAUC,GAE7B,MAAOC,EAAa,CAACD,EAASD,IAC5B,IAAIvC,MAAMwC,GAAStD,KAAK,IAAIc,MAAMuC,GAAUrD,KAAK,KAE7C5L,UAAEA,EAASuO,IAAEA,EAAGlG,OAAEA,GAAW+F,GAASe,EAAWD,EAASD,IAE1DG,EAAe,CAACJ,GAASK,SAAAA,EAAUC,UAAAA,EAAWxL,MAAAA,MAClD,MAAMyL,EAAM,IAAIP,EAAMK,IAItB,OAHAE,EAAID,GAAaxL,EACjBkL,EAAMK,GAAYE,EAEXP,GAEV,MAAO,CACJhP,UAAAA,EACFwP,QAAS,CAACH,EAAUC,EAAWxL,KAC3BuE,EAAO2G,GAASI,EAAaJ,EAAO,CAClCK,SAAAA,EAAUC,UAAAA,EAAWxL,MAAAA,MAGzB2L,SAAU,CAAC9C,EAAM+C,KACfrH,EAAO2G,IACL,IAAIlL,EAAQkL,EAAMrC,EAAK0C,UAAU1C,EAAK2C,WAEtC,OAAOF,EAAaA,EAAaJ,EAAO,IACnCU,EACH5L,MAAAA,IACC,IACE6I,EACH7I,MAAO,OAIb6L,UAAWC,IACTvH,EAAO2G,IACLY,EAAKlQ,QAAQmQ,IACXb,EAAQI,EAAaJ,EAAO,IACvBa,EACH/L,MAAO,MAIJkL,KAGbF,MAAO,IAAMP,EAAIY,EAAWD,EAASD,KAIlBa,CDrDG,EACD,GCsDVC,GHSb,SAAiBC,EAAQ5Q,EAAI6Q,GACzB,MAAMC,GAAUxD,MAAMyD,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOjR,EAAGwD,OAAS,EACzB,MA5DO,CACH5C,UAAWoO,GA2DC6B,EAAgB1B,IAC5B,IAAI+B,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAU7R,EACd,MAAM8R,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAM5P,EAASzB,EAAG8Q,EAASK,EAAO,GAAKA,EAAQhC,GAC3C8B,EACA9B,EAAI1N,GAGJ4P,EAAU9Q,EAAYkB,GAAUA,EAASjC,GAG3C+R,EAAgBP,EAAa3E,IAAI,CAACxL,EAAO0C,IAAM3C,EAAUC,EAAQ6D,IACnEyM,EAAO5N,GAAKmB,EACZ0M,KAAa,GAAK7N,GACd2N,GACAI,KAEL,KACCF,GAAY,GAAK7N,KAIrB,OAFA2N,GAAS,EACTI,IACO,WACHlR,EAAQmR,GACRF,OA1F8BzQ,WG4CX4Q,CAC7B5B,GACA6B,GAAUA,EAAOC,OAAOlK,OAAOiJ,GAAiB,IAATA,GAAYjN,QCrDrD,SAASmO,GAAWC,GAClBhE,KAAKiE,QAAU,GACfjE,KAAKgE,cAAgBA,ECNhB,SAASE,GAASpS,EAAGqS,EAAGC,GAC7BpE,KAAKlO,EAAIA,EACTkO,KAAKmE,EAAIA,EACTnE,KAAKoE,OAASA,ECAhB,SAASC,GAAMC,EAAQ7N,GACrBA,EAAUA,GAAW,GACrBuJ,KAAKP,MAAQ,GACbO,KAAKuE,WAAa9N,EAAQ8N,SAC1BvE,KAAKwE,KAAO,GAEZ,IAAK,IAAI1S,EAAI,EAAGA,EAAIwS,EAAO1O,OAAQ9D,IAAK,CACtCkO,KAAKwE,KAAK1S,GAAK,GAEf,IAAK,IAAIqS,EAAI,EAAG5B,EAAM+B,EAAOxS,GAAIqS,EAAI5B,EAAI3M,OAAQuO,IAAK,CACpD,IAAInP,EAAO,IAAIkP,GAASpS,EAAGqS,EAAG5B,EAAI4B,IAElCnE,KAAKwE,KAAK1S,GAAGqS,GAAKnP,EAClBgL,KAAKP,MAAM/L,KAAKsB,IAIpBgL,KAAK3C,OA6FP,SAASoH,GAAOzP,GACd,IAAI0P,EAAO1P,EACX,MAAM2P,EAAO,GAEb,KAAOD,EAAKE,QACVD,EAAKE,QAAQH,GACbA,EAAOA,EAAKE,OAGd,OAAOD,EFjHTZ,GAAWe,UAAY,CACrB5G,KAAKpI,GACHkK,KAAKiE,QAAQvQ,KAAKoC,GAClBkK,KAAK+E,SAAS/E,KAAKiE,QAAQrO,OAAS,IAGtCsI,MACE,IAAIrK,EAASmM,KAAKiE,QAAQ,GACtBvG,EAAMsC,KAAKiE,QAAQ3I,MAOvB,OALI0E,KAAKiE,QAAQrO,OAAS,IACxBoK,KAAKiE,QAAQ,GAAKvG,EAClBsC,KAAKgF,SAAS,IAGTnR,GAGTqK,OAAOlJ,GACL,IAAIW,EAAIqK,KAAKiE,QAAQnK,QAAQ9E,GACzB0I,EAAMsC,KAAKiE,QAAQ3I,MAEnB3F,IAAMqK,KAAKiE,QAAQrO,OAAS,IAC9BoK,KAAKiE,QAAQtO,GAAK+H,EAEdsC,KAAKgE,cAActG,GAAOsC,KAAKgE,cAAchP,GAC/CgL,KAAK+E,SAASpP,GAEdqK,KAAKgF,SAASrP,KAKpBuI,OACE,OAAO8B,KAAKiE,QAAQrO,QAGtBsI,eAAelJ,GACbgL,KAAK+E,SAAS/E,KAAKiE,QAAQnK,QAAQ9E,KAGrCkJ,SAAS8C,GACP,IAAIlL,EAAUkK,KAAKiE,QAAQjD,GAE3B,KAAOA,EAAI,GAAG,CACZ,IAAIiE,GAAYjE,EAAI,GAAM,GAAK,EAC3B4D,EAAS5E,KAAKiE,QAAQgB,GAE1B,KAAIjF,KAAKgE,cAAclO,GAAWkK,KAAKgE,cAAcY,IAOnD,MANA5E,KAAKiE,QAAQgB,GAAWnP,EACxBkK,KAAKiE,QAAQjD,GAAK4D,EAElB5D,EAAIiE,IAQV/G,SAAS8C,GACP,IAAIpL,EAASoK,KAAKiE,QAAQrO,OACtBE,EAAUkK,KAAKiE,QAAQjD,GACvBkE,EAAYlF,KAAKgE,cAAclO,GAEnC,OAAa,CACX,IAGIqP,EAHAC,EAAWpE,EAAI,GAAM,EACrBqE,EAAUD,EAAU,EACpBE,EAAO,KAGX,GAAID,EAAUzP,EAAQ,CACpB,IAAI2P,EAASvF,KAAKiE,QAAQoB,GAC1BF,EAAcnF,KAAKgE,cAAcuB,GAE7BJ,EAAcD,IACdI,EAAOD,GAIb,GAAID,EAAUxP,EAAQ,CACpB,IAAI4P,EAASxF,KAAKiE,QAAQmB,GACRpF,KAAKgE,cAAcwB,IAET,OAATF,EAAgBJ,EAAYC,KAC3CG,EAAOF,GAIb,GAAa,OAATE,EAKF,MAJAtF,KAAKiE,QAAQjD,GAAKhB,KAAKiE,QAAQqB,GAC/BtF,KAAKiE,QAAQqB,GAAQxP,EACrBkL,EAAIsE,KC/FZpB,GAASY,UAAUW,SAAW,WAC5B,MAAO,IAAIzF,KAAKlO,KAAKkO,KAAKmE,MAG5BD,GAASY,UAAUY,QAAU,SAASC,GACpC,OAAIA,GAAgBA,EAAa7T,IAAMkO,KAAKlO,GAAK6T,EAAaxB,IAAMnE,KAAKmE,EAClD,QAAdnE,KAAKoE,OAGPpE,KAAKoE,QAGdF,GAASY,UAAUc,OAAS,WAC1B,OAAuB,IAAhB5F,KAAKoE,QCIdC,GAAMS,UAAUzH,KAAO,WACrB2C,KAAK6F,WAAa,GAElB,IAAK,IAAIlQ,EAAI,EAAGA,EAAIqK,KAAKP,MAAM7J,OAAQD,IACrCmQ,GAAMC,UAAU/F,KAAKP,MAAM9J,KAI/B0O,GAAMS,UAAUkB,WAAa,WAC3B,IAAK,IAAIrQ,EAAI,EAAGA,EAAIqK,KAAK6F,WAAWjQ,OAAQD,IAC1CmQ,GAAMC,UAAU/F,KAAK6F,WAAWlQ,IAGlCqK,KAAK6F,WAAa,IAGpBxB,GAAMS,UAAUmB,UAAY,SAASjR,GACnCgL,KAAK6F,WAAWnS,KAAKsB,IAGvBqP,GAAMS,UAAUoB,UAAY,SAASlR,GACnC,MAAMsK,EAAM,GACNxN,EAAIkD,EAAKlD,EACTqS,EAAInP,EAAKmP,EACTK,EAAOxE,KAAKwE,KAsBlB,OAnBIA,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,IAC7B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,IAInBK,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,IAC7B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,IAInBK,EAAK1S,IAAM0S,EAAK1S,GAAGqS,EAAI,IACzB7E,EAAI5L,KAAK8Q,EAAK1S,GAAGqS,EAAI,IAInBK,EAAK1S,IAAM0S,EAAK1S,GAAGqS,EAAI,IACzB7E,EAAI5L,KAAK8Q,EAAK1S,GAAGqS,EAAI,IAGlBnE,KAAKuE,UAKNC,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,EAAI,IAC/B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,EAAI,IAIzBK,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,EAAI,IAC/B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,EAAI,IAIzBK,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,EAAI,IAC/B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,EAAI,IAIzBK,EAAK1S,EAAI,IAAM0S,EAAK1S,EAAI,GAAGqS,EAAI,IAC/B7E,EAAI5L,KAAK8Q,EAAK1S,EAAI,GAAGqS,EAAI,IAGtB7E,GAvBEA,GA0BX+E,GAAMS,UAAUW,SAAW,WACzB,MAAMU,EAAc,GACd1G,EAAQO,KAAKwE,KAEnB,IAAK,IAAI1S,EAAI,EAAGA,EAAI2N,EAAM7J,OAAQ9D,IAAK,CACrC,MAAMsU,EAAW,GACX7D,EAAM9C,EAAM3N,GAElB,IAAK,IAAIqS,EAAI,EAAGA,EAAI5B,EAAI3M,OAAQuO,IAC9BiC,EAAS1S,KAAK6O,EAAI4B,GAAGC,QAGvB+B,EAAYzS,KAAK0S,EAASpM,KAAK,MAGjC,OAAOmM,EAAYnM,KAAK,OAc1B,MAAM8L,GAAQ,CACZ5H,OAAOmI,EAAO5I,EAAOC,EAAKjH,GACxB4P,EAAML,aAGN,IAAIM,GAFJ7P,EAAUA,GAAW,IAEG6P,WAAaR,GAAMS,WAAWC,UAClDC,EAAUhQ,EAAQgQ,UAAW,EAE7BC,EFpIC,IAAI3C,GAAW/O,GAAQA,EAAKJ,GEqI7B+R,EAAclJ,EAOlB,IALAA,EAAMmJ,EAAIN,EAAU7I,EAAOC,GAC3B2I,EAAMJ,UAAUxI,GAEhBiJ,EAAShT,KAAK+J,GAEPiJ,EAAS7R,OAAS,GAAG,CAC1B,IAAIgS,EAAcH,EAASpL,MAE3B,GAAIuL,IAAgBnJ,EAClB,OAAO+G,GAAOoC,GAGhBA,EAAYC,QAAS,EAErB,IAAIZ,EAAYG,EAAMH,UAAUW,GAEhC,IAAK,IAAIlR,EAAI,EAAGoR,EAAKb,EAAUtQ,OAAQD,EAAIoR,IAAMpR,EAAG,CAClD,IAAIqR,EAAWd,EAAUvQ,GAEzB,GAAIqR,EAASF,QAAUE,EAASpB,SAC9B,SAGF,IAAIqB,EAASJ,EAAYK,EAAIF,EAAStB,QAAQmB,GAC1CM,EAAcH,EAASI,UAEtBD,GAAeF,EAASD,EAASE,KACpCF,EAASI,SAAU,EACnBJ,EAASpC,OAASiC,EAClBG,EAASJ,EAAII,EAASJ,GAAKN,EAAUU,EAAUtJ,GAC/CsJ,EAASE,EAAID,EACbD,EAASpS,EAAIoS,EAASE,EAAIF,EAASJ,EACnCP,EAAMJ,UAAUe,GAEZP,IACEO,EAASJ,EAAID,EAAYC,GAAMI,EAASJ,IAAMD,EAAYC,GAAKI,EAASE,EAAIP,EAAYO,KAC1FP,EAAcK,GAIbG,EAGHT,EAASW,eAAeL,GAFxBN,EAAShT,KAAKsT,KAQtB,OAAIP,EACKhC,GAAOkC,GAGT,IAGTJ,WAAY,CACVC,UAAS,CAACc,EAAMC,IACLhK,KAAKC,IAAI+J,EAAKzV,EAAIwV,EAAKxV,GACvByL,KAAKC,IAAI+J,EAAKpD,EAAImD,EAAKnD,GAKlCjG,SAASoJ,EAAMC,GACb,IACIC,EAAKjK,KAAKkK,KAAK,GACfC,EAAKnK,KAAKC,IAAI+J,EAAKzV,EAAIwV,EAAKxV,GAC5B6V,EAAKpK,KAAKC,IAAI+J,EAAKpD,EAAImD,EAAKnD,GAEhC,OALQ,GAKKuD,EAAKC,IAASH,KAAgBjK,KAAKqK,IAAIF,EAAIC,KAI5DzJ,UAAUlJ,GACRA,EAAKJ,EAAI,EACTI,EAAKkS,EAAI,EACTlS,EAAK4R,EAAI,EACT5R,EAAKoS,SAAU,EACfpS,EAAK8R,QAAS,EACd9R,EAAK4P,OAAS,OCnNlB,SAASiD,GAAaD,EAAKE,GACzB,IAAIC,EAAOH,EAAM,GAAMrK,KAAKyK,UAAYF,EAAMF,EAAM,GACpD,OAAOrK,KAAK0K,MAAMF,GCHpB,MAAMG,GAAY,CAACC,EAAaC,IAC7B,IAAI1I,MAAM0I,GAAexJ,KAAK,GAAIH,IAAI,IAAMoJ,GAAa,EAAGM,IAcxD,MAAMxO,GAXb,SAAyBwO,EAAaC,EAAeC,GAEnD,MAAMrV,UAAEA,EAASuO,IAAEA,GAAQH,GAAS8G,GAAUC,EAAaE,IAE5D,MAAO,CACJrV,UAAAA,EACAgV,OAAO,IAAMzG,EAAI2G,GAAUC,EAAaC,IACxCtG,MAAO,IAAMP,EAAI2G,GAAUC,EAAaE,KAIxBC,CNjBO,EAEE,EADI,IOa1B,MAAM7H,GAdb,SAAwB/L,GACtB,MAAM6T,EAAU,CACdlG,SAAU,KACVC,UAAW,OAEPtP,UAAEA,EAASuO,IAAEA,EAAGlG,OAAEA,GAAW+F,GAASmH,GAE7C,MAAO,CACJvV,UAAAA,EACAuO,IAAKzK,GAASuE,EAAQ,IAAMvE,GAC5BgL,MAAO,IAAMP,EAAIgH,IAIGC,uNC8GT7M,0BAAL/F,gQAAK+F,aAAL/F,uHAAAA,8DAAAA,mTACc+F,8FAAAA,uJAaJA,KAAU0G,WAAa1G,OAAYA,KAAU2G,YAAc3G,YAG9DA,sPAHGA,KAAU0G,WAAa1G,OAAYA,KAAU2G,YAAc3G,qBAG9DA,6HALJA,2BAAL/F,8QAAK+F,cAAL/F,oHAAAA,8DAAAA,+MAhBC+F,qCAcAA,0BAAL/F,mIAfU+F,oad2Nd,SAAkBzF,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,Mc9NNwF,oJAeLA,aAAL/F,uHAAAA,mEAAAA,oRA1HE6S,GAAQ,WAGFC,EAAUrG,EAAUC,GACxBqG,EAAUtG,WAAaA,GACvBsG,EAAUrG,YAAcA,EAM5B7B,GAASc,KACPc,SAAAA,EACAC,UAAAA,IAPA7B,GAASqB,uBAWE8G,EAAevG,EAAUC,MAClCmG,GACuB,MAAtBE,EAAUtG,UACY,MAAvBsG,EAAUrG,uBAKRqC,EHuDV,SAAiB3C,EAAO6G,EAAcC,EAAeC,EAAYC,GAC/D,MAAM3C,EAAQ,IAAIhC,GAAMrC,EAAMvD,IAAI8D,GAAOA,EAAI9D,IAAIwK,GAAUA,EAAO,EAAI,KAEhEpV,EAASiS,GAAMoD,OACnB7C,EACAA,EAAM7B,KAAKqE,GAAcC,GACzBzC,EAAM7B,KAAKuE,GAAYC,IACvBvK,IAAKoE,IACE,CACLR,SAAUQ,EAAK/Q,EACfwQ,UAAWO,EAAKsB,KAIpB,OAAOtQ,EAAO+B,OAAS,EACnB,CAAC,CACDyM,SAAUwG,EACVvG,UAAWwG,MAEVjV,GAED,GG5EWsV,CACXtF,EACA8E,EAAUtG,SACVsG,EAAUrG,UACVD,EACAC,GAGF7B,GAASqB,YAELsH,GAAQ,EAERzE,EAAK/O,OAAS,UACV6M,EAASkC,GACfyE,GAAQ,SAGJC,QAAgBC,EAAMjH,EAAUC,GAElC8G,IAAUC,GACZE,mBAGW9G,EAASkC,cACX7J,QAAQC,YACRmF,EAAQ,EAAGA,EAAQyE,EAAK/O,OAAQsK,IACvCsJ,gBACExH,GAAMS,SACJkC,EAAKzE,EAAM,GACXyE,EAAKzE,IAGHA,IAAUyE,EAAK/O,OAAS,GAC1BmF,KAED,IAAMmF,oBAKAoJ,EAAMjH,EAAUC,cAClBxH,QAAQC,IACjByO,sBACQ5G,EH1Dd,SAAoBZ,EAAOK,EAAUC,GACnC,GAAkC5B,MAA9BsB,EAAMK,GAAUC,GAClB,MAAO,GAET,MAAML,EAAWD,EAAM,GAAGpM,OACpBsM,EAAUF,EAAMpM,OAEhB6T,EAAQ,GAERC,EAAiB,GAEvB,IAAK,IAAIxJ,EAAQoC,EAAWpC,GAAS,GAC/B8B,EAAMK,GAAUnC,KAAW8B,EAAMK,GAAUC,GADTpC,IAEpCwJ,EAAehW,KAAK,CAClB2O,SAAAA,EACAC,UAAWpC,IAOjB,IAAK,IAAIA,EAAQoC,EAAY,EAAGpC,EAAQ+B,GAClCD,EAAMK,GAAUnC,KAAW8B,EAAMK,GAAUC,GADCpC,IAE9CwJ,EAAehW,KAAK,CAClB2O,SAAAA,EACAC,UAAWpC,IAOjB,MAAMyJ,EAAe,GAErB,IAAK,IAAIzJ,EAAQmC,EAAUnC,GAAS,GAC9B8B,EAAM9B,GAAOoC,KAAeN,EAAMK,GAAUC,GADXpC,IAEnCyJ,EAAajW,KAAK,CAChB2O,SAAUnC,EACVoC,UAAAA,IAON,IAAK,IAAIpC,EAAQmC,EAAW,EAAGnC,EAAQgC,GACjCF,EAAM9B,GAAOoC,KAAeN,EAAMK,GAAUC,GADFpC,IAE5CyJ,EAAajW,KAAK,CAChB2O,SAAUnC,EACVoC,UAAAA,IAeN,OARIoH,EAAe9T,QL5EW,GK6E5B6T,EAAM/V,KAAKgW,GAGTC,EAAa/T,QLhFa,GKiF5B6T,EAAM/V,KAAKiW,GAGNF,EAAM3F,OGPM8F,CAAW/F,EAAQxB,EAAUC,GAEtB,IAAhBM,EAAKhN,SACPiM,GAAMhJ,IAAI+J,EAAKhN,QAEfoM,GAAMW,UAAUC,GAChB7H,GAAQ,IAGVA,GAAQ,IACP,gBAIEwO,IACPM,EAAMnX,sBACAoX,EHxFV,SAA6B9H,GAC3B,IAAIK,EAAUC,EAEd,GACED,EAAWwF,GAAa,EAAG7F,EAAMpM,OAAS,GAC1C0M,EAAYuF,GAAa,EAAG7F,EAAM,GAAGpM,OAAS,SACR,IAA/BoM,EAAMK,GAAUC,IAEzB,MAAQ,CACND,SAAAA,EACAC,UAAAA,GG8EiByH,CAAoBlG,GACnC7B,GAAMQ,QAAQsH,EAASzH,SAAUyH,EAASxH,UAAYxM,SAChDwT,EAAMQ,EAASzH,SAAUyH,EAASxH,aAG1C3I,GAAKqO,kBAGE3K,IACPoD,GAASqB,QACTE,GAAMF,QACNnI,GAAKmI,QACLD,GAAMC,YACN2G,GAAQ,GAERc,IAGFlM,gDArGGoL,EAAQuB,EAAmBH,EAAMjU,QAAU,iCAqH1ByH,WASQqL,EAAUrG,EAAUC,UACdsG,EAAevG,EAAUC,8PC5IjD,sEAAQ,CACnBvN,OAAQiB,SAASiU"}